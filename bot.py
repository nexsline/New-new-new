import os
import asyncio
import requests
from bs4 import BeautifulSoup
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import logging

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = os.environ.get("TOKEN")               # —Ç–æ–∫–µ–Ω –æ—Ç BotFather
USER_ID = int(os.environ.get("USER_ID"))      # —Ç–≤–æ–π Telegram ID (—á–∏—Å–ª–æ)
URL = os.environ.get("URL")                   # —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä
CHECK_INTERVAL = 300                          # –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (5 –º–∏–Ω—É—Ç)

logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞
async def check_stock():
    while True:
        try:
            response = requests.get(URL, headers={"User-Agent": "Mozilla/5.0"})
            soup = BeautifulSoup(response.text, "html.parser")
            button = soup.find("button", {"data-testid": "add-to-cart-button"})
            if button and "–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏" not in button.text.lower():
                await bot.send_message(USER_ID, f"‚úÖ –¢–æ–≤–∞—Ä –ø–æ—è–≤–∏–ª—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏!\n{URL}")
            else:
                print("‚ùå –ü–æ–∫–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏.")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        await asyncio.sleep(CHECK_INTERVAL)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Å–ª–µ–∂—É –∑–∞ —Ç–≤–æ–∏–º —Ç–æ–≤–∞—Ä–æ–º –∏ –Ω–∞–ø–∏—à—É, –∫–æ–≥–¥–∞ –æ–Ω –ø–æ—è–≤–∏—Ç—Å—è üîî")

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
async def on_startup():
    asyncio.create_task(check_stock())

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    await on_startup()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())